model:
  base_learning_rate: 1e-5
  sd_locked : true
  uv_diffuse: "inv_uv_warp"
  num_frames: 8
  target: mvdream.cldm.cldm.ControlLDM
  params:
    # linear_start: 0.00085
    # linear_end: 0.0120
    # timesteps: 1000
    # scale_factor: 0.18215
    # parameterization: "eps"
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "jpg"
    cond_stage_key: "txt"
    control_key: "hint"
    image_size: 64
    channels: 4
    cond_stage_trainable: false
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    only_mid_control: False
    use_uv: ${model.uv_diffuse}
    uv_temperature: 1
    sync_direction: both
    control_stage_config:
      target: mvdream.cldm.cldm.ControlNet
      params:
        image_size: 32 # unused
        in_channels: 4
        hint_channels: 3
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: False
        legacy: False
        camera_dim: 16
        num_frames: ${model.num_frames}

    unet_config:
      target: mvdream.cldm.cldm.ControlledUnetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: False
        legacy: False
        camera_dim: 16
        num_frames: ${model.num_frames}

    first_stage_config:
      target: mvdream.ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: mvdream.ldm.modules.encoders.modules.FrozenCLIPEmbedder


data:
  target: mvdream.data.dataset_UV_oss_8.UVDataset
  params:
    root: "s3://chengwei/data/objs_xatlas_v2"
    use_uv: ${model.uv_diffuse}
    imsize: 512
    pid: 0
    pnum: 8


dataloader:
  batch_size: 12
  num_workers: 48


lightning:
  callbacks:
    # 这个ModelCheckpoint会保存文件为last.pt，凑够step就覆盖掉上一个last.pt`
    modelcheckpoint:
      params:
        every_n_train_steps: 500
    # 这个ModelCheckpoint会保存文件为iteration_xxx.pt
    metrics_over_trainsteps_checkpoint:
      params:
        every_n_train_steps: 20000
    image_logger:
      target: mvdream.cldm.logger-8.ImageLogger
      params:
        batch_frequency: 300
        max_images: 9
        save_video: true
  trainer:
    benchmark: true
    accumulate_grad_batches: 1
#    deepspeed_config: "./configs/deepspeed_zero1.json"
    precision: 16

resume_model_from_checkpoint: ckpts/tencent-sd1.5.ckpt
base_model: ckpts/sd-v1.5-4view.pt
# resume_model_from_checkpoint: logs/sd2/checkpoints/trainstep_checkpoints/epoch=000010-step=000379999.ckpt #./logs/sd2/checkpoints/last.ckpt


ddp:
    nnodes: 1
    gpu_num: 2
    gpu_name: A100